{"version":3,"sources":["context/alerta/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alerta/alertaReducer.js","context/alerta/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","htmlfor","proyectoContext","NuevoProyecto","proyectosContext","proyectos","formulario","errorFormulario","mostrarFormulario","agregarProyecto","mostrarError","ocultarFormulario","url","slug","file","cloudinary_public_id","proyecto","guardarProyecto","descripcion","uploadfile","setUploadFile","onChangeProyecto","replace","toLowerCase","handleChange","a","files","file_aux","onSubmitProyecto","Notification","error","Notificacion_error","console","log","undefined","Notificacion_validar","formData","FormData","append","axios","post","headers","respuesta","data","secure_url","public_id","success","texto","onClick","tipo_usuario","tipoUsuario","numeroProyectos","slice","tareaContext","Proyecto","proyectoActual","obtenerTareas","onClicky","src","urls","split","url_cloudinary","height","_id","text","ListadoProyectos","obtenerProyectos","lenght","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","tareasproyecto","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","precio","tarea","numeroTareas","precio_formateado","Math","round","toFixed","loaded","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","alt","width","seleccionarTarea","tareaEliminar","ListadoTareas","eliminarProyecto","Proyectos","state","action","payload","filter","clienteAxios","create","baseURL","process","REACT_APP_BACKEND_URL","ProyectoState","useReducer","proyectoReducer","dispatch","get","resultado","proyectoId","delete","Provider","children","TareaState","tareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAUth","defaults","common","AuthState","initialState","getItem","AuthReducer","datos","response","RutaPrivada","Component","component","render","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.31b5067e.chunk.js","sourcesContent":["import {createContext} from 'react';\nconst alertaContext = createContext();\n\nexport default alertaContext;","import {createContext} from 'react';\nconst authContext = createContext();\n\nexport default authContext;","import React, {useState, useContext, useEffect} from 'react';\nimport {Link} from  'react-router-dom';\nimport AlertaContext from '../../context/alerta/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\nconst Login = (props) => {\n\n    //importar lova lores del contexto\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext  = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSesion} = authContext;\n\n\n    // en caso de que el password o usuario no exista\n    useEffect(() => {   \n        if(autenticado){\n           props.history.push('/proyectos');\n        }\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria    );\n        }\n    // eslint-disable-next-line \n    },[mensaje, autenticado, props.history]);\n\n    const [usuario, guardarUsuario]  = useState({\n        email :'',\n        password : ''\n    });\n\n    const {email, password} = usuario;\n    const onChange = e  =>{\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]  : e.target.value\n        })\n\n    }\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        if(email.trim() === '' || password.trim() === ''){\n            mostrarAlerta(\"Todos los campos son obligatorios\", 'alerta-error')\n        }\n\n        iniciarSesion({email, password});\n\n\n    }\n    return ( \n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta  ${alerta.categoria}`}> {alerta.msg} </div>): null}\n            <div className=\"contenedor-form  sombra-dark\">\n                <h1 className=\"title is-3\">Iniciar Sesión</h1>\n                <form onSubmit={onSubmit}>\n                    <div className=\"campo-form\">\n                        <label  htmlFor=\"email\">Email</label>\n                        <input \n                            type = \"email\"\n                            id = \"email\"\n                            name = \"email\"\n                            value = {email}\n                            placeholder = \"Tu email\"\n                            onChange = {onChange}\n                        >\n\n                        </input>\n                    </div>\n                    <div className=\"campo-form\">\n                        <label  htmlFor=\"password\">Password</label>\n                        <input \n                            type = \"password\"\n                            id = \"password\"\n                            name = \"password\"\n                            placeholder = \"Tu password\"\n                            value={password}\n                            onChange = {onChange}\n                        >\n\n                        </input>\n                    </div>\n                    <div className=\"campo-form\">\n                        <input  type=\"submit\"  className=\"btn  btn-primario btn-block\"\n                                value=\"Iniciar Sesión   \">\n                        </input>\n                    </div>\n                </form>\n                <Link to ={'/nueva-cuenta'}className=\"enlace-cuenta\">Obtener Cuenta</Link>\n            </div>\n        </div>\n        );\n}\n \nexport default Login;","import React , {useState, useContext, useEffect} from 'react';\nimport {Link} from  'react-router-dom';\nimport AlertaContext from '../../context/alerta/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\n\nconst NuevaCuenta = (props) => {\n\n\n    //importar lova lores del contexto\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    const authContext  = useContext(AuthContext);\n    const { mensaje, autenticado, registrarUsuario} = authContext;\n\n    // en caso de que el usuario se haya autenticado o registrado o sea un registro duplicado \n    useEffect(() => {   \n        if(autenticado){\n            props.history.push('/proyectos');\n        }\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria    );\n        }\n        // eslint-disable-next-line \n    },[mensaje, autenticado, props.history]);\n    const [usuario, guardarUsuario]  = useState({\n        nombre : '',\n        email :'',\n        password : '',\n        confirmar:''\n    });\n\n    const {nombre, email, password, confirmar} = usuario;\n    const onChange = e  =>{\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]  : e.target.value\n        })\n\n    }\n\n    const onSubmit = e =>{\n        e.preventDefault();\n\n        if(nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === ''){\n            mostrarAlerta(\"Todos los campos son obligatorios\", 'alerta-error');\n            return;\n        }\n        \n        if(password.length < 6 ){\n            mostrarAlerta(\"La contraseña debe ser más fuerte\", \"alerta-error\");\n            return;\n        }\n        if (password !== confirmar){\n            mostrarAlerta(\"Las contraseñas no son iguales\", 'alerta-error');\n            return;\n        }\n\n        //registrar usuario\n        registrarUsuario({nombre, email, password})\n    }\n\n    return ( \n\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta  ${alerta.categoria}`}> {alerta.msg} </div>): null}\n            <div className=\"contenedor-form  sombra-dark\">\n                <h1>Nueva Cuenta</h1>\n                <form onSubmit={onSubmit}>\n                    <div className=\"campo-form\">\n                        <label  htmlfor=\"nombre\">Nombre</label>\n                        <input \n                            type = \"text\"\n                            id = \"nombre\"\n                            name = \"nombre\"\n                            value = {nombre}\n                            placeholder = \"Tu nombre\"\n                            onChange = {onChange}\n                        >\n\n                        </input>\n                    </div>\n                    <div className=\"campo-form\">\n                        <label  htmlfor=\"email\">Email</label>\n                        <input \n                            type = \"email\"\n                            id = \"email\"\n                            name = \"email\"\n                            value = {email}\n                            placeholder = \"Tu email\"\n                            onChange = {onChange}\n                        >\n\n                        </input>\n                    </div>\n                    <div className=\"campo-form\">\n                        <label  htmlfor=\"password\">Password</label>\n                        <input \n                            type = \"password\"\n                            id = \"password\"\n                            name = \"password\"\n                            placeholder = \"Tu password\"\n                            value={password}\n                            onChange = {onChange}\n                        >\n\n                        </input>\n                    </div>\n                    <div className=\"campo-form\">\n                        <label  htmlfor=\"confirmar\">Confirmar Password</label>\n                        <input \n                            type = \"password\"\n                            id = \"confirmar\"\n                            name = \"confirmar\"\n                            placeholder = \"Repite tu contraseña\"\n                            value={confirmar}\n                            onChange = {onChange}\n                        >\n\n                        </input>\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input  type=\"submit\"  className=\"btn  btn-primario btn-block\"\n                                value=\"Registrarme\">\n                        </input>\n                    </div>\n                </form>\n                <Link to ={'/'}className=\"enlace-cuenta\">Iniciar Sesión</Link>\n            </div>\n        </div>\n        );\n    \n}\n \nexport default NuevaCuenta;","import {createContext} from 'react';\nconst proyectoContext  = createContext();\n\nexport default proyectoContext;","import React, {Fragment, useState, useContext} from 'react';\nimport axios from 'axios';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nimport Notification from 'react-bulma-notification';\nimport 'react-bulma-notification/build/css/index.css';\n\n\nimport AuthContext from '../../context/autenticacion/authContext'\n\n\n\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/rankea/image/upload ';\nconst CLOUDINARY_UPLOAD_PRESET = 'y9omye1p';\n\n\n\nconst NuevoProyecto = () => {\n\n    const authContext = useContext(AuthContext);\n    const { usuario } = authContext;\n\n\n    const proyectosContext = useContext(proyectoContext)\n    const {proyectos, formulario, errorFormulario , mostrarFormulario, agregarProyecto, \n        mostrarError, ocultarFormulario}  = proyectosContext;\n\n    const [proyecto, guardarProyecto] = useState({\n        nombre: '',\n        url:null,\n        slug: null, \n        file: null,\n        cloudinary_public_id: null\n    })\n\n    const {nombre, descripcion} = proyecto;\n\n    const [uploadfile, setUploadFile] = useState({});\n\n    const onChangeProyecto =  e => { \n        guardarProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value,\n            slug: e.target.value.replace(\" \",\"-\").replace(\"/\",\"-\").toLowerCase()\n        })\n     \n    }\n    const  handleChange = async e => {\n        if(e.target.files[0]){\n            const file_aux =  {\"file\" :e.target.files[0]}\n            setUploadFile({\n                file_aux\n                })\n        }\n    }\n    \n    const onSubmitProyecto = async e => {\n        \n        e.preventDefault();\n        if (nombre === \"\"){\n            Notification.error(\"Tiene que tener un nombre.\")\n            Notificacion_error();\n            mostrarError();\n            return;\n           \n        }\n        console.log(\"descripcion \", descripcion)\n        if (descripcion === \"\"){\n            Notification.error(\"Tiene que tener una descripción.\")\n            Notificacion_error();\n            mostrarError();\n            return;\n           \n        }\n        if(uploadfile.file_aux === undefined){\n            Notification.error(\"Tiene que tener un logo.\")\n\n            Notificacion_error();\n            mostrarError();\n            return;\n        }\n        Notificacion_validar()\n        const file = uploadfile.file_aux.file;\n        const formData = new FormData();\n        formData.append('file', file)\n        formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n        const respuesta = await axios.post(CLOUDINARY_URL, formData, {\n            headers:{\n            'content-type' : 'multipart/form-data'\n            }\n        });\n\n        proyecto.url = respuesta.data.secure_url\n        //agregar el public id de clooudinary al objeto proyecto\n        proyecto.cloudinary_public_id = respuesta.data.public_id \n        console.log(\"RESPUESTA CLAUDINARY\", respuesta.data)\n        agregarProyecto(proyecto);\n        //reiniciar form\n        guardarProyecto({\n            nombre: '',\n            descripcion:''\n        })\n        setUploadFile({})\n        ocultarFormulario()\n    }\n\n    const onClickFormulario = () => {\n        Notification.success(\"Creando nuevo proyecto.\")\n        console.log(\"Tipo usuario \", usuario.tipo_usuario)\n        const tipoUsuario = usuario.tipo_usuario;\n        const numeroProyectos = proyectos.length\n        if(usuario.email !== 'ronaldao@rankea.pe'){\n        if (tipoUsuario === 1) {\n            if(numeroProyectos + 1 > 1){\n                Notification.error('No puedes agregar más proyectos.')\n                return null\n            }\n        }        \n        if (tipoUsuario === 2) {\n            if(numeroProyectos + 1 > 1){\n                Notification.error('No puedes agregar más proyectos.')\n                return null\n            }\n        }\n        }\n        mostrarFormulario()\n    }\n    const Notificacion_validar = () => {\n        Notification.success('Agregado!');\n      };\n    const Notificacion_error = (texto) => {\n        Notification.error('Error al crear el proyecto.');  \n    };\n    return ( \n        <Fragment>\n            <button onClick={onClickFormulario} type=\"button\" className=\"btn btn-block btn-primario\">\n            Nuevo Proyecto\n        </button>\n        {\n            formulario\n            ?(\n                <form className=\"formulario-nuevo-proyecto\"\n                    onSubmit={onSubmitProyecto}>\n                    <input className=\"input-text\" \n                        type=\"text\"  \n                        placeholder=\"Nombre del Proyecto\" \n                        name =\"nombre\"\n                        value = {nombre}\n                        onChange={onChangeProyecto}\n                        ></input>\n                    &nbsp;\n                    <input className=\"input-text\" \n                        type=\"text\"  \n                        placeholder=\"Descripción del Proyecto\" \n                        name =\"descripcion\"\n                        value = {descripcion}\n                        onChange={onChangeProyecto}\n                        ></input>\n                    &nbsp;\n                    <div className=\"file  is-centered is-boxed is-orange has-name\">\n                        <label className=\"file-label\">\n                        <input className=\"file-input\" type=\"file\" name=\"file2\"  onChange= {handleChange}/>\n                        <span className=\"file-cta\">\n                            <span className=\"file-icon\">\n                            <i className=\"fas fa-upload\" />\n                            </span>\n                            <span className=\"file-label\">\n                                Subir logo...\n                            </span>\n                        </span>\n                        <span className=\"file-name\">\n                            {uploadfile.file_aux ? <p>{uploadfile.file_aux.file.name.slice(0, 18)}...</p>: <p>Nada seleccionado...</p>}\n                        </span>\n                        </label>\n                    </div>\n\n\n                    <input type =\"submit\" \n                        className=\"btn btn-primario btn-block\" \n                        value =\"Agregar Proyecto\">\n                    </input>\n\n                </form>\n            ): null}\n            <br></br>\n            {errorFormulario ? <p className=\"subtitle is-6\">Uno de los campos es incorrecto.</p>:null}\n\n        </Fragment>\n        \n     );\n}\n \nexport default NuevoProyecto;","import {createContext} from 'react';\n\nconst tareaContext = createContext()\nexport default tareaContext;","import React , {useContext, Fragment} from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nimport Notification from 'react-bulma-notification';\nimport 'react-bulma-notification/build/css/index.css';\n\nconst Proyecto = ({proyecto}) => {\n    const proyectosContext = useContext(proyectoContext)\n    const {proyectoActual}  = proyectosContext;\n\n    const tareasContext = useContext(tareaContext)\n    const {obtenerTareas}  = tareasContext;\n\n\n    const seleccionarProyecto = id =>{\n        proyectoActual(id);\n        obtenerTareas(id);\n    }   \n    const onClicky = () => {\n        Notification.success('Copiado!');\n      };\n    const url_cloudinary = url => {\n        var urls = url.split(\"/\")\n        var len_urls = urls.length\n        var url_new = urls[len_urls-1]\n        return 'https://res.cloudinary.com/rankea/image/upload/w_100,h_100,c_pad,b_white/'+url_new\n        }\n    return ( \n        <li>\n            { proyecto.url ? \n            <center>\n                <img src={url_cloudinary(proyecto.url)} height=\"100\" height=\"width\"/>\n            </center>\n            :null}\n            <a\n                type=\"button\"\n                className=\"subtitle is-6\"\n                onClick={()=> seleccionarProyecto(proyecto._id)}>\n                    <h2 className=\"\"><i className=\"fas fa-shopping-cart\"></i> <u>{proyecto.nombre}</u></h2>\n            </a>\n            <br></br>\n          \n            <CopyToClipboard text={`https://WhatsCart.co/${proyecto.slug}`} >\n            <p\n                className=\"proyecto-slug\" onClick={() =>{ onClicky()}}>\n                <i className=\"fas fa-globe\"></i>                    Whatscart.co/{ proyecto.slug }\n            </p>\n            </CopyToClipboard>\n            <CopyToClipboard text={`https://WhatsCart.co/${proyecto.slug}`} >\n            <p\n                className=\"proyecto-slug\" onClick={() =>{ onClicky()}}>\n                    (clic para copiar)\n            </p>\n            </CopyToClipboard>\n        </li>\n    );\n}\n \nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport AlertaContext from '../../context/alerta/alertaContext';\n\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\n\n\nconst ListadoProyectos = () => {\n    const proyectosContext  = useContext(proyectoContext);\n    const {mensaje, proyectos, obtenerProyectos} = proyectosContext;\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta} = alertaContext;\n\n    useEffect(() => {\n        //si hay un error\n        console.log(\"MENSAJE \", mensaje)\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria)\n        }\n        obtenerProyectos();\n        // eslint-disable-next-line \n    }, [mensaje]);\n\n    if(proyectos.lenght === 0 ) return null;\n    return ( \n        <ul className=\"listado-proyectos\">\n            {alerta ?(<div className ={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\n            <TransitionGroup>\n            {proyectos.map(proyecto  => (\n                <CSSTransition\n                    key={proyecto._id}\n                    timeout ={400}\n                    classNames = \"proyecto\"\n                    >\n                    <Proyecto  proyecto ={proyecto}></Proyecto>\n                </CSSTransition>    \n            \n            ))}\n            </TransitionGroup>\n        </ul>\n     );\n}\n \nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto  from '../proyectos/NuevoProyecto';\nimport ListadoProyectos  from '../proyectos/ListadoProyectos';\n\nconst Sidebar = () => {\n    return (\n        <aside>\n            <h1 className=\"title is-3\">Whats<span><strong>Cart</strong></span></h1>\n            <NuevoProyecto></NuevoProyecto>\n            <div className=\"proyectos\">\n                <h2 className=\"title is-5\">Tus proyectos</h2>\n                <ListadoProyectos></ListadoProyectos>\n            </div>\n        </aside>\n      );\n}\n \nexport default Sidebar; ","import React, { useContext, useEffect } from 'react';\n\nimport AuthContext from '../../context/autenticacion/authContext'\n\n\nconst Barra = () => {\n    //extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { usuarioAutenticado, usuario, cerrarSesion } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado( )\n        // eslint-disable-next-line \n    }, [])\n    return ( \n        <header className=\"app-header\">\n            {usuario ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : null}\n            \n            <nav className=\"nav-principal\">\n                <button\n                className=\"btn btn-blank cerrar-sesion\"\n                onClick={() => cerrarSesion()}\n                ><u>Cerrar Sesión</u></button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Barra;","import React, {useContext, useState, useEffect} from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport axios from 'axios';\n\nimport Notification from 'react-bulma-notification';\nimport 'react-bulma-notification/build/css/index.css';\n\nimport AuthContext from '../../context/autenticacion/authContext'\n\n\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/rankea/image/upload ';\nconst CLOUDINARY_UPLOAD_PRESET = 'y9omye1p';\n\n\nconst FormTarea = () => {\n    const authContext = useContext(AuthContext);\n    const { usuario } = authContext;\n\n    const proyectosContext  = useContext(proyectoContext);\n    const {proyecto, proyectos} = proyectosContext;\n    const tareasContext = useContext(tareaContext);\n    const { tareaseleccionada, tareasproyecto, errortarea, agregarTarea, validarTarea,\n         obtenerTareas, actualizarTarea, limpiarTarea}  = tareasContext;\n\n    \n    const [uploadfile, setUploadFile] = useState({});\n    \n\n    //effect que de tecta si hay una tarea seleccionada\n    useEffect(() =>{\n        if(tareaseleccionada !== null){\n            guardarTarea(tareaseleccionada)\n        }else{\n            guardarTarea({\n                nombre: '',\n                precio : '',\n                descripcion : '',\n                file:null,\n                url : null\n            })\n        }\n    },[tareaseleccionada])\n    \n    const [tarea, guardarTarea]  = useState({\n        nombre : '',\n        descripcion: '',\n        precio:null,\n        file: null,\n        url : null,\n        categoria:null\n    })\n\n    const {nombre, descripcion, precio, url, categoria } = tarea;\n\n    if(!proyecto) return null;\n    \n    const [proyectoActual] = proyecto;\n    const  onSubmit = async (e)  => {\n\n        e.preventDefault();\n        if(tarea.nombre.length > 50){\n            Notification.error(\"El Nombre tiene que más corto.\")\n            return;\n        }\n        if(nombre.trim() === ''){\n            validarTarea();\n            return;\n        }\n        console.log(descripcion.length)\n        if (descripcion.length > 180)\n        {\n            Notification.error(\"Descripción tiene que más corta.\")\n            return;\n        }\n        if(descripcion.trim() === ''){\n            validarTarea();\n            return;\n        }\n        if(precio.trim() === ''){\n            Notification.error(\"Introducir un precio valido.\")\n            validarTarea();\n            return;\n        }\n\n        if( tarea.file   === null){\n            Notification.error(\"Añada una foto.\")\n            validarTarea();\n            return;\n        }\n        \n        if( uploadfile.uploadfile   === null){\n            Notification.error(\"Añada una foto.\")\n            validarTarea();\n            return;\n        }\n\n        //controlar tipos de usuario\n        const tipoUsuario = usuario.tipo_usuario;\n        const numeroTareas = tareasproyecto.length\n        if(usuario.email !== 'ronaldao@rankea.pe'){\n        if (tipoUsuario === 1) {\n            if(numeroTareas + 1 > 26){\n                Notification.error('No puedes agregar más productos en tu plan.')\n                return null\n            }\n        }        \n        if (tipoUsuario === 2) {\n            if(numeroTareas + 1 > 51){\n                Notification.error('No puedes agregar más productos en tu plan.')\n                return null\n            }\n        }\n        if (tipoUsuario === 3) {\n            if(numeroTareas + 1 > 101){\n                Notification.error('No puedes agregar más productos en tu plan.')\n                return null\n            }\n        }\n        }\n\n\n\n        //si es edicion o es una nueva tarea\n        if(tareaseleccionada === null){\n            //agregar tarea nueva al state\n            tarea.proyecto = proyectoActual._id;\n            const file = uploadfile.uploadfile.file;\n            const formData = new FormData();\n            formData.append('file', file)\n            formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n            const respuesta = await axios.post(CLOUDINARY_URL, formData, {\n                headers:{\n                'content-type' : 'multipart/form-data'\n                }\n            });\n            tarea.url = respuesta.data.secure_url\n            let precio_formateado =  (Math.round(tarea.precio * 100) / 100).toFixed(2);\n            tarea.precio = precio_formateado\n            tarea.cloudinary_public_id = respuesta.data.public_id\n\n            await agregarTarea(tarea);\n            //elimina tarea seleccionada del state\n            \n\n        }else{\n            const file_aux = uploadfile.uploadfile;\n            if(file_aux) {\n                const file = uploadfile.uploadfile.file;\n                const formData = new FormData();\n                formData.append('file', file)\n                formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n                const respuesta = await axios.post(CLOUDINARY_URL, formData, {\n                    headers:{\n                    'content-type' : 'multipart/form-data'\n                    }\n                });\n                tarea.url = respuesta.data.secure_url\n                \n            }\n            //actualizar tarea existente\n            actualizarTarea(tarea);\n            //elimina tarea seleccionada del state\n            limpiarTarea();\n        }\n        obtenerTareas(proyectoActual._id)\n        guardarTarea({\n            nombre :'',\n            precio: '',\n            descripcion: '',\n            categoria:'',\n            file: '',\n            url:null\n        })\n        uploadfile.uploadfile = null;\n\n    }\n\n\n    const  handleChange = async e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name] : e.target.value\n        });\n        if(e.target.files){\n            const file = e.target.files[0]\n            console.log(file);\n            const uploadfile ={\n              file,\n              loaded: 0,\n            }\n            console.log(uploadfile);\n        \n            setUploadFile({\n            uploadfile  \n            })\n        }\n    }\n    \n\n    return ( \n    \n        <div className=\"form formulario\">\n            \n            <form\n            onSubmit = {onSubmit}\n            >               \n            <div className=\"contenedor-input\">\n                <input type=\"text\"\n                    className=\"input-text\"\n                    placeholder = \"Nombre\"\n                    name = \"nombre\"\n                    onChange={handleChange}\n                    value ={nombre}\n                ></input>\n            </div>\n            \n            <br></br>\n            <div className=\"contenedor-input\">\n                <input type=\"number\"\n                    className=\"input-text\"\n                    placeholder = \"Precio\"\n                    name = \"precio\"\n                    onChange={handleChange}\n                    value ={precio}\n                ></input>\n            </div>\n            <br></br>\n            <div className=\"contenedor-input\">\n                <input type=\"text\"\n                    className=\"input-text\"\n                    placeholder = \"Categoría\"\n                    name = \"categoria\"\n                    onChange={handleChange}\n                    value ={categoria}\n                ></input>\n            </div>\n            <br></br>\n            <div className=\"contenedor-input\">\n                <textarea type=\"text\"\n                    className=\"input-text\"\n                    placeholder = \"Descripción\"\n                    name = \"descripcion\"\n                    onChange={handleChange}\n                    value ={descripcion}\n                ></textarea>\n            </div>\n            <br></br>\n            <div className=\"file has-name \">\n            <label className=\"file-label\">\n                <input className=\"file-input\" type=\"file\" \n                    name = \"file\"\n                    onChange={handleChange}/>\n                <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                    <i className=\"fas fa-upload\" />\n                </span>\n                <span className=\"file-label\">\n                    Añadir una foto...\n                </span>\n                </span>\n                <span className=\"file-name has-text-white\">\n                {uploadfile.uploadfile? uploadfile.uploadfile.file.name  : ( url ? url : \"Seleccionar imagen\")}\n                </span>\n            </label>\n            </div>\n\n            <div className=\"contenedor-input\">\n                <input type = \"submit\" \n                className=\"btn btn-primario btn-submit  btn-block\"\n                value = {tareaseleccionada ? \"Editar Item\" : \"Agregar Item\"}>\n\n                </input>\n            </div>\n            </form>\n            {errortarea ? \n            <p className=\"mensaje error\">Uno de los campos es incorrecto o vacío.</p>\n            :null\n            }\n        </div>  \n     );\n}\n \nexport default FormTarea;","import React, { useContext, Fragment } from 'react';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\n\n    \nconst Tarea = ({tarea}) => {\n    const proyectosContext = useContext(proyectoContext)\n    const {proyecto}  = proyectosContext;\n\n    const tareasContext = useContext(tareaContext)\n    const {eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual}  = tareasContext;\n    \n    const cambiarEstado = tarea =>{\n        if(tarea.estado){\n            tarea.estado = false;\n        }else{\n            tarea.estado = true;\n        }\n        actualizarTarea(tarea);\n    }\n    \n    const [proyectoActual]  = proyecto;\n    const tareaEliminar = id =>{\n        //console.log(\"ID \",id)\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual._id)\n        const url_nueva = url_cloudinary(tarea.url)\n    }\n    const seleccionarTarea = tarea =>{\n        guardarTareaActual(tarea);\n    }\n\n    const url_cloudinary = url => {\n        var urls = url.split(\"/\")\n        var len_urls = urls.length\n        var url_new = urls[len_urls-1]\n        return 'https://res.cloudinary.com/rankea/image/upload/w_300,h_250,c_pad,b_white/'+url_new\n    }\n    \n    return (\n        <Fragment>\n            <Fragment>\n            <div className=\"box\">\n                <article className=\"columns\">\n                    <div className=\"column\">\n                        <center>\n                            <figure className=\"image is-300x250\">\n                                    <img src={url_cloudinary(tarea.url)} alt=\"Image\" width=\"300\" height=\"250\" />\n                            </figure>\n                        </center>\n                    </div>\n                    <div className=\"column\">\n                    <div className=\"content\">\n                        <p>\n                        <strong>{tarea.nombre} </strong>\n                        \n                        <br />\n                        {tarea.descripcion}.\n                        <br/>\n                        <small><strong>Precio: </strong>S./{tarea.precio} PEN.</small>\n                        <br/>\n                        <small><strong>Categoría: </strong>{tarea.categoria}.</small>\n                        </p>\n                    </div>\n                    {tarea.estado\n                                            ?\n                                            (\n                                                <button \n                                                type=\"button\"\n                                                className=\"button is-success\"\n                                                onClick = {() => cambiarEstado(tarea)}\n                                                >\n                                                    Disponible\n                                                </button>\n                                            )\n                                            :\n                                            (\n                                                <button \n                                                type=\"button\"\n                                                className=\"button is-danger\"\n                                                onClick = {() => cambiarEstado(tarea)}>\n                                                    No Disponible\n                                                </button>\n                                            )\n                                        }   \n                    <button\n                        type=\"button\"\n                        className=\"button is-warning\"\n                        onClick={() =>{\n                            seleccionarTarea(tarea);\n                        }}\n                        >\n                            Editar\n                    </button>\n                    <button\n                        type=\"button\"\n                        onClick={ ()=> tareaEliminar(tarea._id)}\n                        className=\"button is-danger\">\n                            Eliminar\n                    </button>                        \n                    </div>\n                </article>\n                </div>\n            </Fragment>\n        </Fragment>\n     );\n}\n \nexport default Tarea;","import React, {Fragment, useContext} from 'react';\nimport Tarea from './Tarea'\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport Notification from 'react-bulma-notification';\nimport 'react-bulma-notification/build/css/index.css';\n\nconst ListadoTareas = () => {\n    const proyectosContext  = useContext(proyectoContext);\n    const {proyecto, eliminarProyecto} = proyectosContext;\n\n\n\n    const tareasContext = useContext(tareaContext);\n    const {tareasproyecto}  = tareasContext;\n\n    if(!proyecto) return <h2 className=\"title is-4\">Selecciona un Proyecto</h2>\n    const [proyectoActual] = proyecto;\n    //const tareasProyecto = []\n    const onClickEliminar = () => {\n        Notification.error(\"Proyecto eliminado.\");\n        eliminarProyecto(proyectoActual._id, proyectoActual.cloudinary_public_id);\n    }\n    return ( \n\n        <Fragment>\n        <h2 className=\"title is-5\">Proyecto: <strong>{proyectoActual.nombre}</strong></h2>\n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0 \n                ? (<li className=\"tarea\"><p>No hay productos...</p></li>)\n                :\n                <TransitionGroup>\n                    \n                    {\n                        tareasproyecto.map(tarea => (\n                            <CSSTransition \n                                key = {tarea._id}\n                                timeout={400}\n                                classNames=\"tarea\"\n                                >\n                                <Tarea\n                                    tarea = {tarea}>\n                                </Tarea>\n                            </CSSTransition>\n                        ))\n                    }\n                    \n                </TransitionGroup>\n\n            }\n            </ul>\n            <button className=\"btn button is-danger\" onClick={onClickEliminar}>Eliminar Proyecto &times;</button>\n        </Fragment>\n     );\n}\n \nexport default ListadoTareas;","import React, { useContext, useEffect } from 'react'\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTareas from '../tareas/ListadoTareas';\nimport AuthContext from '../../context/autenticacion/authContext'\nconst Proyectos = () => {\n\n\n    //extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado( )\n        // eslint-disable-next-line \n    }, [])\n\n\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar></Sidebar>\n            <div className=\"seccion-principal\">\n                <Barra></Barra>\n                <main>\n                    <FormTarea></FormTarea>\n                    <div className=\"contenedor-tareas\">  \n                        <ListadoTareas></ListadoTareas>\n                    </div>\n                </main>\n            </div>\n        </div>\n        );\n}\n \nexport default Proyectos;","\nimport {FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO,\n     PROYECTO_ACTUAL, PROYECTO_ERROR,\n     ELIMINAR_PROYECTO,\n     OCULTAR_FORMULARIO} from '../../types';\n\nexport default (state, action ) => {\n    switch(action.type){\n        case FORMULARIO_PROYECTO:\n            return{\n                ...state,\n                formulario: true\n            }\n        case OCULTAR_FORMULARIO:\n            return{\n                ...state,\n                formulario: false\n            }\n        case OBTENER_PROYECTOS:\n            return{\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return{\n                ...state,\n                proyectos:[...state.proyectos,action.payload],\n                errorFormulario : false\n            }\n        case VALIDAR_FORMULARIO:\n            return{\n                ...state,\n                errorFormulario : true\n            }\n        case PROYECTO_ACTUAL:\n            return{\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\n            }\n        case ELIMINAR_PROYECTO:\n            return{\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\n                proyecto:null\n            }\n        case PROYECTO_ERROR:\n            console.log(\"PRYECTO ERROR\", action.payload)\n            return{\n                ...state, \n                mensaje: action.payload\n            }\n        default:\n            return state;\n    }\n}","export  const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport  const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport  const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport  const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport  const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport  const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\nexport  const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport  const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport  const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport  const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport  const TAREA_ACTUAL = 'TAREA_ACTUAL'\nexport  const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA'\nexport  const LIMPIAR_TAREA = 'LIMPIAR_TAREA'\n\n\nexport  const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'\nexport  const OCULTAR_ALERTA = 'OCULTAR_ALERTA'\n\n\nexport  const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO'\nexport  const REGISTRO_ERROR = 'REGISTRO_ERROR'\nexport  const OBTENER_USUARIO = 'OBTENER_USUARIO'\nexport  const LOGIN_EXITOSO = 'LOGIN_EXISTOSO'\nexport  const LOGIN_ERROR = 'LOGIN_ERROR'\nexport  const CERRAR_SESION = 'CERRAR_SESION'\n\nexport  const OCULTAR_FORMULARIO = 'OCULTAR_FORMULARIO'\n\n\n\n\n","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n})\n\nexport default clienteAxios;\n","import React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\n\nimport {FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, PROYECTO_ERROR,\n    VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO, OCULTAR_FORMULARIO\n} from '../../types';\nimport clienteAxios from '../../config/axios';\n\n\n\nconst ProyectoState =  props =>{\n    \n    \n    const initialState ={\n        proyectos: [],\n        formulario : false,\n        errorFormulario: false,\n        proyecto : null, \n        mensaje: null\n    }\n    const [state, dispatch]  = useReducer( proyectoReducer, initialState);\n    \n    const mostrarFormulario = () =>{\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n    const ocultarFormulario = () =>{\n        dispatch({\n            type: OCULTAR_FORMULARIO\n        })\n    }\n    \n    const obtenerProyectos = async () =>{\n        try{\n            const resultado  = await clienteAxios.get('/api/proyectos');\n\n            dispatch({\n                type:OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n\n        }catch(error){\n            const alerta = {\n                msg: 'Hubo un error.',\n                categoria : 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload:alerta\n            })\n        }\n    }\n\n    const agregarProyecto = async proyecto =>{\n        try{\n            const  resultado  = await clienteAxios.post('/api/proyectos', proyecto);\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n\n        }catch(error){\n            const alerta = {\n                msg: 'Hubo un error.',\n                categoria : 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload:alerta\n            })\n        }\n    }\n\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO,\n        })\n    }\n    \n    //SELECCIONA EL PROYECTO QUE EL USUARIO DIO CLIC\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type:PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n\n\n    const eliminarProyecto = async (proyectoId)  => {\n        try{\n            await  clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            })\n        }catch(error){\n            const alerta = {\n                msg: 'Hubo un error.',\n                categoria : 'alerta-error'\n            }\n            \n            dispatch({\n                type: PROYECTO_ERROR,\n                payload:alerta\n            })\n        }\n    }\nreturn (\n    <proyectoContext.Provider\n    \n    value={{\n        proyectos: state.proyectos,\n        formulario: state.formulario,\n        errorFormulario: state.errorFormulario,\n        proyecto: state.proyecto,\n        mensaje:state.mensaje,\n        obtenerProyectos,\n        mostrarFormulario, \n        agregarProyecto, \n        mostrarError, \n        proyectoActual, \n        eliminarProyecto,\n        ocultarFormulario\n        \n    }}>\n        {props.children}\n    </proyectoContext.Provider>\n)\n\n}\nexport default  ProyectoState;","\nimport {\n    TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA,  \n    TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA\n} from  '../../types';\n\n\nexport default (state, action) =>{\n    switch(action.type){\n        case TAREAS_PROYECTO:\n            return{\n                ...state, \n                tareasproyecto: action.payload\n            }\n        case AGREGAR_TAREA:\n            console.log(\"PAYLOAD \", action.payload)\n            return {\n                ...state,\n                tareasproyecto: [...state.tareasproyecto, action.payload],\n                errortarea: false\n            }\n        case VALIDAR_TAREA:\n            return {    \n                ...state,\n                errortarea: true\n            }\n        case ELIMINAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\n            }\n            case ACTUALIZAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea)\n            }\n        case TAREA_ACTUAL:\n            return{\n                ...state,\n                tareaseleccionada: action.payload\n            }\n        case LIMPIAR_TAREA:\n            return{\n                ...state,\n                tareaseleccionada: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport TareaContext  from './tareaContext';\nimport tareaReducer from './tareaReducer';\nimport {TAREAS_PROYECTO, AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,\n     TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props =>{\n    const initialState = {\n        \n        tareasproyecto : [],\n        errortarea: false,\n        tareaseleccionada:null\n    }\n\n    const [state, dispatch] = useReducer(tareaReducer, initialState)\n\n\n    const obtenerTareas = async proyecto =>{\n        console.log(\"obtener tareas\", proyecto) \n        try{\n            \n            const resultado = await clienteAxios.get('/api/tareas', {params:{proyecto}});\n            console.log(resultado)\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    const  agregarTarea = async tarea =>{\n\n        try{\n            console.log(\"tarea\" , tarea)\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\n            console.log(\"resultado\", resultado)\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: tarea\n            })\n        }catch(error){\n            console.log(error)\n        }\n        \n    }\n\n    const  validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    const eliminarTarea  = async (id, proyecto)  =>{\n        console.log(\"eliminar tarea\")\n        try{\n            await clienteAxios.delete(`/api/tareas/${id}`, {params : {proyecto}})\n            dispatch({\n                type:ELIMINAR_TAREA,\n                payload:id\n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n\n    //extrae una tarea para edicion (tareaActual)\n    const guardarTareaActual = tarea =>{\n        dispatch({\n            type:TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    //edita una tarea\n    const actualizarTarea = async tarea =>{\n        try{\n            const resultado = await  clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n            console.log(resultado)\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        }catch(error){\n\n        }\n        \n    }\n\n    //elimina la tarea seleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n\n    return(\n        <TareaContext.Provider\n            value = {{\n                tareasproyecto: state.tareasproyecto,\n                errortarea : state.errortarea,\n                tareaseleccionada : state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n\n}\n\nexport default TareaState;","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\n\n\nexport default (state, action) => {\n    switch (action.type){\n        case MOSTRAR_ALERTA:\n            return {\n                    alerta: action.payload\n        }\n        case OCULTAR_ALERTA:\n            return{\n            alerta: null\n        }\n        default:\n            return state;\n    }\n}","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types'\nimport React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaContext from './alertaContext';\n\n\nconst AlertaState = props  =>{\n    const initialState = {\n        alerta:null\n    }\n    const [state, dispatch]  = useReducer(alertaReducer, initialState);\n\n\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }        \n        })\n    \n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        },5000);\n    }\n\n\n    return(\n        <alertaContext.Provider\n            value={{\n                    alerta: state.alerta,\n                    mostrarAlerta\n            }}>\n            {props.children}\n        </alertaContext.Provider>\n    )\n}\n\nexport default AlertaState;","import { \n    REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION\n} from '../../types'\n\n\nexport default (state, action) => {\n    switch (action.type){\n        case REGISTRO_EXITOSO:\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return{\n                ...state,\n                autenticado: true,\n                mensaje: null, \n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return{\n                ...state, \n                usuario: action.payload.usuario,\n                autenticado:true,\n                cargando: false\n            }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token')\n            return{\n                ...state,\n                token:null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload,\n                cargando : false\n            }\n        \n        default:\n            return state;\n    }\n}","import clienteAxios from './axios';\n\nconst tokenAUth = token  => {\n    if(token){\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    }else{\n        delete clienteAxios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default tokenAUth;","import React, { useReducer } from 'react';\nimport AuthContext  from './authContext';\nimport AuthReducer  from './authReducer';\n\nimport { \n    REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION\n} from '../../types'\n\nimport clienteAxios from '../../config/axios';\n//import alertaContext from '../alerta/alertaContext';\nimport tokenAUth from '../../config/token'\nconst AuthState = props =>{\n\n    const  initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null, \n        mensaje: null, \n        cargando : true\n    }\n\n    const [state, dispatch ] = useReducer( AuthReducer, initialState);\n\n    //las funciones\n    \n    const registrarUsuario = async datos => {\n        try{\n            const respuesta  = await clienteAxios.post('/api/usuarios', datos);\n            \n            dispatch({\n                type:REGISTRO_EXITOSO,\n                payload: respuesta.data\n            })\n        }catch(error){\n            //console.log(error.response.data.msg);\n            const  alerta = {\n                msg: error.response.data.msg,\n                categoria : 'alerta-error'\n            }\n            dispatch ({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n        usuarioAutenticado();\n    }\n\n    // retorna el usuario autenticado\n\n    const usuarioAutenticado = async() =>{\n\n        const token = localStorage.getItem('token');\n        if (token){\n            //funcion para enviar el token por headers\n            tokenAUth(token)\n        }\n        try{\n            const respuesta = await clienteAxios.get('/api/auth');\n            //console.log(respuesta)\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data\n            })\n        }catch(error){\n            //console.log(error.response);\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    // cuando  el usuario inicial \n    const iniciarSesion = async datos =>{\n        try{\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            })\n\n            //OBTENER EL USUARIO\n            usuarioAutenticado()\n        }catch(error){\n            //console.log(error.response.data.msg);\n            const  alerta = {\n                msg: error.response.data.msg,\n                categoria : 'alerta-error'\n            }\n            dispatch ({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //cierra la sesion del usuario\n    const cerrarSesion = () => {\n        dispatch ({\n            type: CERRAR_SESION\n        })\n    }\n    return(\n        <AuthContext.Provider\n            value ={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando : state.cargando,\n                registrarUsuario, \n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n        {props.children}\n        </AuthContext.Provider>\n    )\n        \n\n}\n\nexport default AuthState;","import React, {useEffect, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport AuthContext from  '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({component: Component, ...props}) => {\n\n\n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\n\n\n    useEffect(() =>{\n        usuarioAutenticado();\n        // eslint-disable-next-line \n    }, [])\n    return (  \n\n        <Route\n            {...props} render = { props => !autenticado && !cargando ?(\n                <Redirect\n                to  = \"/\"\n                ></Redirect>\n            ) :\n            (\n                <Component {...props}> \n                </Component>\n            )}\n        />\n      );\n}\n \nexport default RutaPrivada;","import React from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from  './context/proyectos/proyectoState';\nimport TareaState from  './context/tareas/tareaState';\nimport AlertaState from  './context/alerta/alertaState';\nimport AuthState from  './context/autenticacion/authState';\n\nimport tokenAUth from './config/token';\n\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n\n// revisar si hay un token \nconst token  = localStorage.getItem('token');\nif(token){\n  tokenAUth(token);\n}\n\nfunction App() {\n  console.log(process.env.REACT_APP_BACKEND_URL)\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n             <Router>\n              <Switch>\n                <Route exact path=\"/\" component = {Login}></Route>\n                <Route exact path=\"/nueva-cuenta\" component = {NuevaCuenta}></Route>\n                <RutaPrivada exact path=\"/proyectos\" component = {Proyectos}></RutaPrivada>\n              </Switch>\n          </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n        \n    </ProyectoState> \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bulma.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}